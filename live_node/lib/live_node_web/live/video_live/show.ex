defmodule LiveNodeWeb.VideoLive.Show do
  use LiveNodeWeb, :live_view

  alias LiveNode.VideoDownload

  @impl true
  def mount(_params, _session, socket) do
    {:ok, socket}
  end

  @impl true
  def handle_params(%{"id" => id}, _, socket) do
    {:noreply,
     socket
     |> assign(:page_title, page_title(socket.assigns.live_action))
     |> assign(:video, VideoDownload.get_video!(id))}
  end

  # NOTE: Do not need to define this, use what's generated by the router
  # def watch_path(_a, _b, _c) do
  #   # temp, to stop error
  #   "temp/video_arduino/arduino.mp4"
  # end

  defp page_title(:show), do: "Show Video"
  defp page_title(:edit), do: "Edit Video"
end
